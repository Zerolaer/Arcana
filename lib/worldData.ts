import { Continent, Zone, FarmSpot, Mob } from '@/types/world'

// –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–æ–±—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∑–æ–Ω—ã
const getZoneMobs = (zoneId: string, baseLevel: number): Mob[] => {
  const zoneMobTemplates: Record<string, Array<{
    name: string
    icon: string
    rarity: 'common' | 'uncommon' | 'rare' | 'elite' | 'boss'
    healthMultiplier: number
    attackMultiplier: number
    defenseMultiplier: number
    expMultiplier: number
    goldMultiplier: number
  }>> = {
    // –ó–û–ù–ê 1: –ú–∏—Ä–Ω—ã–µ –õ—É–≥–∞ (1-5 —É—Ä–æ–≤–µ–Ω—å)
    'peaceful_meadows': [
      { name: '–õ–µ—Å–Ω–æ–π –°–ª–∏–∑–µ–Ω—å', icon: 'üü¢', rarity: 'common', healthMultiplier: 15, attackMultiplier: 2, defenseMultiplier: 1, expMultiplier: 0.8, goldMultiplier: 1.5 },
      { name: '–î–∏–∫–∏–π –ö—Ä–æ–ª–∏–∫', icon: 'üê∞', rarity: 'common', healthMultiplier: 12, attackMultiplier: 1.5, defenseMultiplier: 0.5, expMultiplier: 0.6, goldMultiplier: 1 },
      { name: '–õ–µ—Å–Ω–∞—è –ü—á–µ–ª–∞', icon: 'üêù', rarity: 'common', healthMultiplier: 10, attackMultiplier: 1.8, defenseMultiplier: 0.3, expMultiplier: 0.7, goldMultiplier: 1.2 },
      { name: '–ú–∏—Ä–Ω—ã–π –û–ª–µ–Ω—å', icon: 'ü¶å', rarity: 'uncommon', healthMultiplier: 25, attackMultiplier: 2.5, defenseMultiplier: 1.5, expMultiplier: 1.2, goldMultiplier: 2 }
    ],
    
    // –ó–û–ù–ê 2: –¢–µ–º–Ω—ã–π –õ–µ—Å (6-12 —É—Ä–æ–≤–µ–Ω—å)
    'dark_forest': [
      { name: '–î–∏–∫–∏–π –í–æ–ª–∫', icon: 'üê∫', rarity: 'common', healthMultiplier: 20, attackMultiplier: 3, defenseMultiplier: 2, expMultiplier: 1.2, goldMultiplier: 2 },
      { name: '–õ–µ—Å–Ω–æ–π –ü–∞—É–∫', icon: 'üï∑Ô∏è', rarity: 'common', healthMultiplier: 18, attackMultiplier: 2.8, defenseMultiplier: 1.8, expMultiplier: 1.1, goldMultiplier: 1.8 },
      { name: '–¢–µ–º–Ω—ã–π –ú–µ–¥–≤–µ–¥—å', icon: 'üêª', rarity: 'uncommon', healthMultiplier: 35, attackMultiplier: 4.5, defenseMultiplier: 3, expMultiplier: 1.8, goldMultiplier: 3.5 },
      { name: '–õ–µ—Å–Ω–æ–π –¢—Ä–æ–ª–ª—å', icon: 'üßå', rarity: 'rare', healthMultiplier: 50, attackMultiplier: 6, defenseMultiplier: 4, expMultiplier: 2.5, goldMultiplier: 5 }
    ],
    
    // –ó–û–ù–ê 3: –ü–µ—â–µ—Ä—ã –ì–æ–±–ª–∏–Ω–æ–≤ (13-20 —É—Ä–æ–≤–µ–Ω—å)
    'goblin_caves': [
      { name: '–ì–æ–±–ª–∏–Ω-–†–∞–∑–≤–µ–¥—á–∏–∫', icon: 'üëπ', rarity: 'common', healthMultiplier: 25, attackMultiplier: 3.5, defenseMultiplier: 2, expMultiplier: 1.5, goldMultiplier: 2.5 },
      { name: '–ì–æ–±–ª–∏–Ω-–í–æ–∏–Ω', icon: '‚öîÔ∏è', rarity: 'uncommon', healthMultiplier: 35, attackMultiplier: 4.5, defenseMultiplier: 3, expMultiplier: 2.0, goldMultiplier: 3.5 },
      { name: '–ì–æ–±–ª–∏–Ω-–®–∞–º–∞–Ω', icon: 'üßô', rarity: 'uncommon', healthMultiplier: 30, attackMultiplier: 5, defenseMultiplier: 1.5, expMultiplier: 2.2, goldMultiplier: 4 },
      { name: '–ì–æ–±–ª–∏–Ω-–í–æ–∂–∞–∫', icon: 'üëë', rarity: 'rare', healthMultiplier: 60, attackMultiplier: 7, defenseMultiplier: 5, expMultiplier: 3.5, goldMultiplier: 7 }
    ],
    
    // –ó–û–ù–ê 4: –ü—ã–ª–∞—é—â–∞—è –ü—É—Å—Ç—ã–Ω—è (21-28 —É—Ä–æ–≤–µ–Ω—å)
    'burning_desert': [
      { name: '–ü–µ—Å—á–∞–Ω—ã–π –°–∫–æ—Ä–ø–∏–æ–Ω', icon: 'ü¶Ç', rarity: 'common', healthMultiplier: 30, attackMultiplier: 4, defenseMultiplier: 2.5, expMultiplier: 2.0, goldMultiplier: 3 },
      { name: '–û–≥–Ω–µ–Ω–Ω–∞—è –Ø—â–µ—Ä–∏—Ü–∞', icon: 'ü¶é', rarity: 'common', healthMultiplier: 25, attackMultiplier: 3.5, defenseMultiplier: 1.8, expMultiplier: 1.8, goldMultiplier: 2.8 },
      { name: '–ü—É—Å—Ç—ã–Ω–Ω—ã–π –î–∂–∏–Ω–Ω', icon: 'üßû', rarity: 'uncommon', healthMultiplier: 45, attackMultiplier: 6, defenseMultiplier: 3, expMultiplier: 3.0, goldMultiplier: 5 },
      { name: '–û–≥–Ω–µ–Ω–Ω—ã–π –≠–ª–µ–º–µ–Ω—Ç–∞–ª—å', icon: 'üî•', rarity: 'rare', healthMultiplier: 70, attackMultiplier: 8, defenseMultiplier: 4, expMultiplier: 4.5, goldMultiplier: 8 }
    ],
    
    // –ó–û–ù–ê 5: –õ–µ–¥—è–Ω—ã–µ –ü–∏–∫–∏ (29-35 —É—Ä–æ–≤–µ–Ω—å)
    'frozen_peaks': [
      { name: '–õ–µ–¥—è–Ω–æ–π –í–æ–ª–∫', icon: 'üê∫', rarity: 'common', healthMultiplier: 35, attackMultiplier: 4.5, defenseMultiplier: 3, expMultiplier: 2.5, goldMultiplier: 4 },
      { name: '–°–Ω–µ–∂–Ω—ã–π –ô–µ—Ç–∏', icon: 'ü¶ç', rarity: 'uncommon', healthMultiplier: 55, attackMultiplier: 6.5, defenseMultiplier: 4.5, expMultiplier: 3.5, goldMultiplier: 6 },
      { name: '–õ–µ–¥—è–Ω–æ–π –ì–æ–ª–µ–º', icon: 'üóø', rarity: 'rare', healthMultiplier: 80, attackMultiplier: 7, defenseMultiplier: 8, expMultiplier: 4.8, goldMultiplier: 9 },
      { name: '–õ–µ–¥—è–Ω–æ–π –î—Ä–∞–∫–æ–Ω', icon: 'üêâ', rarity: 'elite', healthMultiplier: 120, attackMultiplier: 10, defenseMultiplier: 6, expMultiplier: 6.5, goldMultiplier: 12 }
    ],
    
    // –ó–û–ù–ê 6: –ü—Ä–æ–∫–ª—è—Ç—ã–µ –ë–æ–ª–æ—Ç–∞ (36-40 —É—Ä–æ–≤–µ–Ω—å)
    'cursed_swamp': [
      { name: '–ë–æ–ª–æ—Ç–Ω–∞—è –õ—è–≥—É—à–∫–∞', icon: 'üê∏', rarity: 'common', healthMultiplier: 40, attackMultiplier: 5, defenseMultiplier: 2, expMultiplier: 3.0, goldMultiplier: 4.5 },
      { name: '–¢–µ–Ω–µ–≤–æ–π –î—É—Ö', icon: 'üëª', rarity: 'uncommon', healthMultiplier: 35, attackMultiplier: 6, defenseMultiplier: 1, expMultiplier: 3.5, goldMultiplier: 5.5 },
      { name: '–ë–æ–ª–æ—Ç–Ω—ã–π –¢—Ä–æ–ª–ª—å', icon: 'üßå', rarity: 'uncommon', healthMultiplier: 65, attackMultiplier: 7.5, defenseMultiplier: 5, expMultiplier: 4.2, goldMultiplier: 7.5 },
      { name: '–ù–µ–∫—Ä–æ–º–∞–Ω—Ç', icon: 'üßô‚Äç‚ôÇÔ∏è', rarity: 'rare', healthMultiplier: 80, attackMultiplier: 9, defenseMultiplier: 3, expMultiplier: 5.5, goldMultiplier: 10 }
    ],
    
    // –ó–û–ù–ê 7: –í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–π –ö—Ä–∞—Ç–µ—Ä (41-50 —É—Ä–æ–≤–µ–Ω—å)
    'volcanic_crater': [
      { name: '–õ–∞–≤–æ–≤—ã–π –°–ª–∏–∑–µ–Ω—å', icon: 'üü†', rarity: 'common', healthMultiplier: 50, attackMultiplier: 6, defenseMultiplier: 3, expMultiplier: 4.0, goldMultiplier: 6 },
      { name: '–û–≥–Ω–µ–Ω–Ω—ã–π –î–µ–º–æ–Ω', icon: 'üëπ', rarity: 'uncommon', healthMultiplier: 70, attackMultiplier: 8, defenseMultiplier: 4, expMultiplier: 5.5, goldMultiplier: 8.5 },
      { name: '–ú–∞–≥–º–∞ –ì–æ–ª–µ–º', icon: 'üåã', rarity: 'rare', healthMultiplier: 100, attackMultiplier: 10, defenseMultiplier: 8, expMultiplier: 7.0, goldMultiplier: 12 },
      { name: '–í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–π –î—Ä–∞–∫–æ–Ω', icon: 'üêâ', rarity: 'elite', healthMultiplier: 150, attackMultiplier: 12, defenseMultiplier: 6, expMultiplier: 9.0, goldMultiplier: 18 }
    ],
    
    // –ó–û–ù–ê 8: –ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –ü–µ—â–µ—Ä—ã (51-60 —É—Ä–æ–≤–µ–Ω—å)
    'crystal_caverns': [
      { name: '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –ü–∞—É–∫', icon: 'üï∑Ô∏è', rarity: 'common', healthMultiplier: 60, attackMultiplier: 7, defenseMultiplier: 4, expMultiplier: 5.5, goldMultiplier: 8 },
      { name: '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –ì–æ–ª–µ–º', icon: 'üíé', rarity: 'uncommon', healthMultiplier: 90, attackMultiplier: 9, defenseMultiplier: 10, expMultiplier: 7.5, goldMultiplier: 12 },
      { name: '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –î—Ä–∞–∫–æ–Ω', icon: 'üêâ', rarity: 'rare', healthMultiplier: 130, attackMultiplier: 11, defenseMultiplier: 7, expMultiplier: 9.5, goldMultiplier: 16 },
      { name: '–î—Ä–µ–≤–Ω–∏–π –õ–∏—á', icon: 'üëë', rarity: 'elite', healthMultiplier: 180, attackMultiplier: 14, defenseMultiplier: 8, expMultiplier: 12.0, goldMultiplier: 22 }
    ],
    
    // –ó–û–ù–ê 9: –¢—Ä–æ–Ω –î—Ä–∞–∫–æ–Ω–æ–≤ (61-75 —É—Ä–æ–≤–µ–Ω—å)
    'dragon_throne': [
      { name: '–î—Ä–∞–∫–æ–Ω–∏–π –°–ª—É–≥–∞', icon: 'üê≤', rarity: 'uncommon', healthMultiplier: 100, attackMultiplier: 10, defenseMultiplier: 6, expMultiplier: 8.0, goldMultiplier: 14 },
      { name: '–î—Ä–µ–≤–Ω–∏–π –î—Ä–∞–∫–æ–Ω', icon: 'üêâ', rarity: 'rare', healthMultiplier: 200, attackMultiplier: 15, defenseMultiplier: 10, expMultiplier: 15.0, goldMultiplier: 25 },
      { name: '–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –î—Ä–∞–∫–æ–Ω–æ–≤', icon: 'üëë', rarity: 'elite', healthMultiplier: 300, attackMultiplier: 20, defenseMultiplier: 12, expMultiplier: 20.0, goldMultiplier: 35 },
      { name: '–ë–æ–≥ –î—Ä–∞–∫–æ–Ω–æ–≤', icon: 'üêâ', rarity: 'boss', healthMultiplier: 500, attackMultiplier: 25, defenseMultiplier: 15, expMultiplier: 30.0, goldMultiplier: 50 }
    ]
  }

  const templates = zoneMobTemplates[zoneId] || zoneMobTemplates['peaceful_meadows']
  
  return templates.map((template, index) => {
    const level = baseLevel + index
    const health = Math.floor(template.healthMultiplier * level)
    const attack = Math.floor(template.attackMultiplier * level)
    const defense = Math.floor(template.defenseMultiplier * level)
    
    // –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –æ–ø—ã—Ç–∞ (8-12 –º–æ–±–æ–≤ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è)
    const experience_reward = Math.max(7, Math.floor(template.expMultiplier * level * 0.8))
    const gold_reward = Math.floor(template.goldMultiplier * level)

    return {
      id: `${template.name.toLowerCase().replace(/\s+/g, '_')}_${zoneId}_${level}`,
      name: template.name,
      level,
      health,
      attack,
      defense,
      experience_reward,
      gold_reward,
      icon: template.icon,
      rarity: template.rarity,
      loot_table: [] // –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–≥—Ä–µ
    }
  })
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞—Ä–º —Å–ø–æ—Ç–æ–≤ –¥–ª—è –∑–æ–Ω—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –º–æ–±–∞–º–∏ –≤ –∫–∞–∂–¥–æ–π —è—á–µ–π–∫–µ
const createFarmSpots = (zoneId: string, baseLevel: number, gridSize: number = 4): FarmSpot[] => {
  const spots: FarmSpot[] = []
  const allZoneMobs = getZoneMobs(zoneId, baseLevel)
  
  // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è —Å–ø–æ—Ç–æ–≤
  const spotNames = [
    '–¢–∏—Ö–∞—è –ü–æ–ª—è–Ω–∞', '–ó–∞—Ä–æ—Å—à–∏–π –£–≥–æ–ª', '–¢–µ–Ω–µ–≤–æ–π –£—á–∞—Å—Ç–æ–∫', '–°–æ–ª–Ω–µ—á–Ω–∞—è –õ—É–∂–∞–π–∫–∞',
    '–ö–∞–º–µ–Ω–Ω–∞—è –ì—Ä—è–¥–∞', '–†—É—á–µ–π–∫–æ–≤—ã–π –ë–µ—Ä–µ–≥', '–°—Ç–∞—Ä—ã–π –î—É–±', '–ú—à–∏—Å—Ç–∞—è –¢—Ä–æ–ø–∞',
    '–í–µ—Ç—Ä–µ–Ω—ã–π –•–æ–ª–º', '–¢–∏—Ö–∏–π –û–≤—Ä–∞–≥', '–¶–≤–µ—Ç—É—â–∏–π –õ—É–≥', '–¢–µ–º–Ω–∞—è –ß–∞—â–∞',
    '–°–∫–∞–ª–∏—Å—Ç—ã–π –£—Å—Ç—É–ø', '–ü–µ—Å—á–∞–Ω–∞—è –î—é–Ω–∞', '–õ–µ–¥—è–Ω–∞—è –†–∞—Å—â–µ–ª–∏–Ω–∞', '–û–≥–Ω–µ–Ω–Ω–∞—è –Ø–º–∞'
  ]
  
  for (let x = 0; x < gridSize; x++) {
    for (let y = 0; y < gridSize; y++) {
      const spotIndex = x * gridSize + y
      const spotName = spotNames[spotIndex] || `–£—á–∞—Å—Ç–æ–∫ ${x + 1}-${y + 1}`
      
      // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –º–æ–±–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ø–æ—Ç–∞
      const spotMobs: Mob[] = []
      const numMobs = Math.floor(Math.random() * 3) + 1 // 1-3 –º–æ–±–∞ –Ω–∞ —Å–ø–æ—Ç
      
      // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã—Ö –º–æ–±–æ–≤ –∏–∑ –∑–æ–Ω—ã
      const shuffledMobs = [...allZoneMobs].sort(() => Math.random() - 0.5)
      
      for (let i = 0; i < numMobs && i < shuffledMobs.length; i++) {
        const baseMob = shuffledMobs[i]
        // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞—Ü–∏—é –º–æ–±–∞ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ —É—Ä–æ–≤–Ω—è
        const levelVariation = Math.floor(Math.random() * 3) - 1 // -1, 0, –∏–ª–∏ +1
        const mobLevel = Math.max(1, baseLevel + levelVariation)
        
        spotMobs.push({
          ...baseMob,
          id: `${baseMob.id}_spot_${spotIndex}`,
          level: mobLevel,
          health: Math.floor(baseMob.health * (mobLevel / baseLevel)),
          attack: Math.floor(baseMob.attack * (mobLevel / baseLevel)),
          defense: Math.floor(baseMob.defense * (mobLevel / baseLevel)),
          experience_reward: Math.floor(baseMob.experience_reward * (mobLevel / baseLevel)),
          gold_reward: Math.floor(baseMob.gold_reward * (mobLevel / baseLevel))
        })
      }
      
      spots.push({
        id: `${zoneId}_spot_${x}_${y}`,
        name: spotName,
        position: { x, y },
        mobs: spotMobs,
        level_range: { min: baseLevel - 1, max: baseLevel + 3 },
        zone_id: zoneId
      })
    }
  }
  
  return spots
}

// –ö–û–ù–¢–ò–ù–ï–ù–¢ 1: –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–µ–º–ª–∏ (1-20 —É—Ä–æ–≤–µ–Ω—å)
const beginnerContinent: Continent = {
  id: 'beginner_lands',
  name: '–ù–∞—á–∞–ª—å–Ω—ã–µ –ó–µ–º–ª–∏',
  description: '–ú–∏—Ä–Ω—ã–µ –∑–µ–º–ª–∏ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –≥–¥–µ –º–æ–∂–Ω–æ –∏–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã –±–æ—è',
  level_range: { min: 1, max: 20 },
  map_position: { x: 0, y: 1 },
  color_theme: 'green',
  zones: [
    {
      id: 'peaceful_meadows',
      name: '–ú–∏—Ä–Ω—ã–µ –õ—É–≥–∞',
      description: '–°–ø–æ–∫–æ–π–Ω—ã–µ –ª—É–≥–∞ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞–º–∏',
      level_range: { min: 1, max: 5 },
      continent_id: 'beginner_lands',
      farm_spots: createFarmSpots('peaceful_meadows', 1)
    },
    {
      id: 'dark_forest',
      name: '–¢–µ–º–Ω—ã–π –õ–µ—Å',
      description: '–ì—É—Å—Ç–æ–π –ª–µ—Å, –ø–æ–ª–Ω—ã–π –æ–ø–∞—Å–Ω–æ—Å—Ç–µ–π',
      level_range: { min: 6, max: 12 },
      continent_id: 'beginner_lands',
      farm_spots: createFarmSpots('dark_forest', 6)
    },
    {
      id: 'goblin_caves',
      name: '–ü–µ—â–µ—Ä—ã –ì–æ–±–ª–∏–Ω–æ–≤',
      description: '–ü–æ–¥–∑–µ–º–Ω—ã–µ –ø–µ—â–µ—Ä—ã, –∫–∏—à–∞—â–∏–µ –≥–æ–±–ª–∏–Ω–∞–º–∏',
      level_range: { min: 13, max: 20 },
      continent_id: 'beginner_lands',
      farm_spots: createFarmSpots('goblin_caves', 13)
    }
  ]
}

// –ö–û–ù–¢–ò–ù–ï–ù–¢ 2: –î–∏–∫–∏–µ –ó–µ–º–ª–∏ (21-40 —É—Ä–æ–≤–µ–Ω—å)
const wildContinent: Continent = {
  id: 'wild_lands',
  name: '–î–∏–∫–∏–µ –ó–µ–º–ª–∏',
  description: '–°—É—Ä–æ–≤—ã–µ –∑–µ–º–ª–∏ —Å —Å–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞–º–∏',
  level_range: { min: 21, max: 40 },
  map_position: { x: 1, y: 0 },
  color_theme: 'orange',
  unlock_requirements: {
    level: 21
  },
  zones: [
    {
      id: 'burning_desert',
      name: '–ü—ã–ª–∞—é—â–∞—è –ü—É—Å—Ç—ã–Ω—è',
      description: '–ñ–∞—Ä–∫–∞—è –ø—É—Å—Ç—ã–Ω—è —Å –æ–≥–Ω–µ–Ω–Ω—ã–º–∏ —Å—É—â–µ—Å—Ç–≤–∞–º–∏',
      level_range: { min: 21, max: 28 },
      continent_id: 'wild_lands',
      farm_spots: createFarmSpots('burning_desert', 21)
    },
    {
      id: 'frozen_peaks',
      name: '–õ–µ–¥—è–Ω—ã–µ –ü–∏–∫–∏',
      description: '–ó–∞—Å–Ω–µ–∂–µ–Ω–Ω—ã–µ –≥–æ—Ä—ã —Å –ª–µ–¥—è–Ω—ã–º–∏ –º–æ–Ω—Å—Ç—Ä–∞–º–∏',
      level_range: { min: 29, max: 35 },
      continent_id: 'wild_lands',
      farm_spots: createFarmSpots('frozen_peaks', 29)
    },
    {
      id: 'cursed_swamp',
      name: '–ü—Ä–æ–∫–ª—è—Ç—ã–µ –ë–æ–ª–æ—Ç–∞',
      description: '–ú—Ä–∞—á–Ω—ã–µ –±–æ–ª–æ—Ç–∞ —Å –Ω–µ–∂–∏—Ç—å—é',
      level_range: { min: 36, max: 40 },
      continent_id: 'wild_lands',
      farm_spots: createFarmSpots('cursed_swamp', 36)
    }
  ]
}

// –ö–û–ù–¢–ò–ù–ï–ù–¢ 3: –î—Ä–∞–∫–æ–Ω—å–∏ –ó–µ–º–ª–∏ (41-75 —É—Ä–æ–≤–µ–Ω—å)
const dragonContinent: Continent = {
  id: 'dragon_lands',
  name: '–î—Ä–∞–∫–æ–Ω—å–∏ –ó–µ–º–ª–∏',
  description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –∑–µ–º–ª–∏, –≥–¥–µ –ø—Ä–∞–≤—è—Ç –¥—Ä–∞–∫–æ–Ω—ã',
  level_range: { min: 41, max: 75 },
  map_position: { x: 2, y: 1 },
  color_theme: 'red',
  unlock_requirements: {
    level: 41
  },
  zones: [
    {
      id: 'volcanic_crater',
      name: '–í—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏–π –ö—Ä–∞—Ç–µ—Ä',
      description: '–ê–∫—Ç–∏–≤–Ω—ã–π –≤—É–ª–∫–∞–Ω —Å –ª–∞–≤–æ–≤—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–ª—è–º–∏',
      level_range: { min: 41, max: 50 },
      continent_id: 'dragon_lands',
      farm_spots: createFarmSpots('volcanic_crater', 41)
    },
    {
      id: 'crystal_caverns',
      name: '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–µ –ü–µ—â–µ—Ä—ã',
      description: '–ü–µ—â–µ—Ä—ã, –ø–æ–ª–Ω—ã–µ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤',
      level_range: { min: 51, max: 60 },
      continent_id: 'dragon_lands',
      farm_spots: createFarmSpots('crystal_caverns', 51)
    },
    {
      id: 'dragon_throne',
      name: '–¢—Ä–æ–Ω –î—Ä–∞–∫–æ–Ω–æ–≤',
      description: '–õ–æ–≥–æ–≤–æ –¥—Ä–µ–≤–Ω–∏—Ö –¥—Ä–∞–∫–æ–Ω–æ–≤',
      level_range: { min: 61, max: 75 },
      continent_id: 'dragon_lands',
      farm_spots: createFarmSpots('dragon_throne', 61)
    }
  ]
}

export const WORLD_DATA: Continent[] = [
  beginnerContinent,
  wildContinent,
  dragonContinent
]

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –∏–≥—Ä–æ–∫–∞
export const getAvailableContinents = (playerLevel: number): Continent[] => {
  return WORLD_DATA.filter(continent => {
    if (!continent.unlock_requirements) return true
    return playerLevel >= (continent.unlock_requirements.level || 1)
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–æ–Ω –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞
export const getAvailableZones = (continentId: string, playerLevel: number): Zone[] => {
  const continent = WORLD_DATA.find(c => c.id === continentId)
  if (!continent) return []
  
  return continent.zones.filter(zone => {
    if (!zone.unlock_requirements) return true
    return playerLevel >= (zone.unlock_requirements.level || 1)
  })
}
