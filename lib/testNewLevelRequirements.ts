import { calculateXpToNext, getLevelProgressionExamples } from './levelSystemV2'

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É—Ä–æ–≤–Ω—è–º
 */

export function testNewLevelRequirements() {
  console.log('üéØ –ù–û–í–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –£–†–û–í–ù–Ø–ú (–ú–ï–î–õ–ï–ù–ù–ê–Ø –ü–†–û–ö–ê–ß–ö–ê)')
  console.log('====================================================')
  
  console.log('\nüìä –ü–†–û–ì–†–ï–°–°–ò–Ø XP (–ø–µ—Ä–≤—ã–µ 15 —É—Ä–æ–≤–Ω–µ–π):')
  console.log('Level | XP Required | –ú–æ–±–æ–≤ –Ω—É–∂–Ω–æ (15 XP)')
  console.log('------|-------------|---------------------')
  
  for (let level = 1; level <= 15; level++) {
    const xpRequired = calculateXpToNext(level)
    const mobsNeeded = Math.ceil(xpRequired / 15) // –°—Ä–µ–¥–Ω–∏–π –º–æ–± –¥–∞–µ—Ç 15 XP
    
    const xpFormatted = xpRequired >= 1000 ? `${(xpRequired/1000).toFixed(1)}K` : xpRequired.toString()
    
    console.log(`${level.toString().padStart(5)} | ${xpFormatted.padStart(11)} | ${mobsNeeded.toString().padStart(13)}`)
  }
  
  console.log('\nüöÄ –ö–õ–Æ–ß–ï–í–´–ï –£–†–û–í–ù–ò:')
  
  const keyLevels = [1, 5, 10, 15, 20, 30, 50, 80, 100]
  keyLevels.forEach(level => {
    const xpRequired = calculateXpToNext(level)
    const mobsNeeded = Math.ceil(xpRequired / 15)
    
    const xpFormatted = xpRequired >= 1000 ? `${(xpRequired/1000).toFixed(1)}K` : xpRequired.toString()
    
    const description = level === 1 ? '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç' :
                       level === 5 ? '–ù–∞—á–∞–ª–æ –∏–≥—Ä—ã' :
                       level === 10 ? '–ú–∏–≥–¥–µ–π–º' :
                       level === 20 ? '–•–∞–π–≥–µ–π–º' :
                       level === 50 ? '–≠–Ω–¥–≥–µ–π–º' :
                       level === 80 ? '–°–æ—Ñ—Ç-–∫–∞–ø' :
                       level === 100 ? '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : ''
    
    console.log(`Level ${level}: ${xpFormatted} XP (~${mobsNeeded} –º–æ–±–æ–≤) ‚Üí ${description}`)
  })
  
  console.log('\n‚ö° –°–†–ê–í–ù–ï–ù–ò–ï –° –ü–†–ï–î–´–î–£–©–ï–ô –°–ò–°–¢–ï–ú–û–ô:')
  console.log('–°—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞:')
  console.log('  1 ‚Üí 2: 105 XP (~7 –º–æ–±–æ–≤)')
  console.log('  5 ‚Üí 6: ~300 XP (~20 –º–æ–±–æ–≤)')
  console.log('  10 ‚Üí 11: ~1.2K XP (~80 –º–æ–±–æ–≤)')
  
  console.log('\n–ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:')
  console.log(`  1 ‚Üí 2: ${calculateXpToNext(1)} XP (~${Math.ceil(calculateXpToNext(1) / 15)} –º–æ–±–æ–≤)`)
  console.log(`  5 ‚Üí 6: ${calculateXpToNext(5)} XP (~${Math.ceil(calculateXpToNext(5) / 15)} –º–æ–±–æ–≤)`)
  console.log(`  10 ‚Üí 11: ${calculateXpToNext(10)} XP (~${Math.ceil(calculateXpToNext(10) / 15)} –º–æ–±–æ–≤)`)
  
  console.log('\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´:')
  console.log('‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω–∞—è –∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–∫–∞—á–∫–∞')
  console.log('‚Ä¢ –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞')
  console.log('‚Ä¢ –¶–µ–Ω–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è')
  console.log('‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏—è –∏–≥—Ä–∞—Ç—å –¥–æ–ª—å—à–µ')
  console.log('‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤—ã—Å–æ–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π')
  
  console.log('\nüéÆ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ì–ï–ô–ú–ü–õ–ï–Æ:')
  console.log('‚Ä¢ –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –∏–∑—É—á–µ–Ω–∏–∏ –º–µ—Ö–∞–Ω–∏–∫, –∞ –Ω–µ –Ω–∞ –ø—Ä–æ–∫–∞—á–∫–µ')
  console.log('‚Ä¢ –ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –±—É–¥–µ—Ç –∑–Ω–∞—á–∏–º—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º')
  console.log('‚Ä¢ –í—ã—Å–æ–∫–∏–µ —É—Ä–æ–≤–Ω–∏ —Å—Ç–∞–Ω—É—Ç —Ä–µ–¥–∫–∏–º–∏ –∏ —Ü–µ–Ω–Ω—ã–º–∏')
  console.log('‚Ä¢ –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ñ–∞—Ä–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ –∑–æ–ª–æ—Ç–∞')
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  (window as any).testNewLevelRequirements = testNewLevelRequirements
}
