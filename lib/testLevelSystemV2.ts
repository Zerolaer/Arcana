import { getLevelProgressionExamples, getKeyLevels, calculateXpToNext, processXpGain } from './levelSystemV2'

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ —É—Ä–æ–≤–Ω–µ–π V2
 */

export function testLevelSystemV2() {
  console.log('üéØ –¢–ï–°–¢ –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´ –ü–†–û–ì–†–ï–°–°–ò–ò V2')
  console.log('=====================================')
  
  console.log('\nüìä –ü–†–û–ì–†–ï–°–°–ò–Ø XP (–ø–µ—Ä–≤—ã–µ 20 —É—Ä–æ–≤–Ω–µ–π):')
  console.log('Level | XP Required | Description')
  console.log('------|-------------|-------------')
  
  const examples = getLevelProgressionExamples()
  examples.forEach(({ level, xpRequired, totalXp }) => {
    const xpFormatted = xpRequired >= 1000 ? `${(xpRequired/1000).toFixed(1)}K` : xpRequired.toString()
    const description = level === 1 ? '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç' : 
                       level === 10 ? '–ú–∏–≥–¥–µ–π–º' :
                       level === 20 ? '–•–∞–π–≥–µ–π–º' : ''
    console.log(`${level.toString().padStart(5)} | ${xpFormatted.padStart(11)} | ${description}`)
  })
  
  console.log('\nüöÄ –ö–õ–Æ–ß–ï–í–´–ï –£–†–û–í–ù–ò:')
  
  const keyLevels = getKeyLevels()
  keyLevels.forEach(({ level, xpRequired, totalXp }) => {
    const xpFormatted = xpRequired >= 1000 ? `${(xpRequired/1000).toFixed(1)}K` : xpRequired.toString()
    const totalFormatted = totalXp >= 1000 ? `${(totalXp/1000).toFixed(1)}K` : totalXp.toString()
    const description = level === 1 ? '–°—Ç–∞—Ä—Ç' :
                       level === 10 ? '~42K –æ–±—â–∏–π XP' :
                       level === 20 ? '~119K –æ–±—â–∏–π XP' :
                       level === 50 ? '~3.7M –æ–±—â–∏–π XP' :
                       level === 80 ? '~12.6M –æ–±—â–∏–π XP (—Å–æ—Ñ—Ç-–∫–∞–ø)' :
                       level === 99 ? '~21M –æ–±—â–∏–π XP' :
                       level === 100 ? '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å' : ''
    
    console.log(`Level ${level}: ${xpFormatted} XP ‚Üí ${description}`)
  })
  
  console.log('\n‚ö° –õ–û–ì–ò–ö–ê –†–ê–ë–û–¢–´:')
  console.log('‚úÖ –£ –∏–≥—Ä–æ–∫–∞ –µ—Å—Ç—å —É—Ä–æ–≤–µ–Ω—å L –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å XP –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è')
  console.log('‚úÖ –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ XP: –ø—Ä–æ–≥—Ä–µ—Å—Å += XP')
  console.log('‚úÖ –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å >= XP_to_next(L): –ø–æ–≤—ã—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å')
  console.log('‚úÖ –í—ã—á–∏—Ç–∞–µ–º –∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: –ø—Ä–æ–≥—Ä–µ—Å—Å -= XP_to_next(—Å—Ç–∞—Ä—ã–π L)')
  console.log('‚úÖ –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–∫–∞ —Ö–≤–∞—Ç–∞–µ—Ç XP (–≤–æ–∑–º–æ–∂–µ–Ω –∞–ø –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–æ–≤–Ω–µ–π)')
  console.log('‚úÖ –ù–∞ 100 —É—Ä–æ–≤–Ω–µ: XP_to_next = 0, –ø—Ä–æ–∫–∞—á–∫–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è')
  
  console.log('\nüéÆ –ü–†–ò–ú–ï–† –†–ê–ë–û–¢–´:')
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ XP
  let currentLevel = 1
  let currentXpProgress = 0
  const xpGained = 500 // –ü–æ–ª—É—á–∞–µ–º 500 XP
  
  console.log(`–ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: Level ${currentLevel}, XP Progress: ${currentXpProgress}`)
  console.log(`–ü–æ–ª—É—á–∞–µ–º ${xpGained} XP...`)
  
  const result = processXpGain(currentLevel, currentXpProgress, xpGained)
  
  console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç:`)
  console.log(`  –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: ${result.newLevel}`)
  console.log(`  –ù–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å: ${result.newXpProgress}`)
  console.log(`  –£—Ä–æ–≤–Ω–µ–π –ø–æ–ª—É—á–µ–Ω–æ: ${result.levelsGained}`)
  console.log(`  –û—á–∫–æ–≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: ${result.totalStatPointsGained}`)
  console.log(`  XP –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: ${result.xpToNext}`)
  
  console.log('\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´:')
  console.log('‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (1-10 —É—Ä–æ–≤–Ω–∏)')
  console.log('‚Ä¢ –†–æ–≤–Ω—ã–π –º–∏–¥–≥–µ–π–º (10-60)')
  console.log('‚Ä¢ –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ (60-80)')
  console.log('‚Ä¢ –°–æ—Ñ—Ç-–∫–∞–ø –≤ —ç–Ω–¥–≥–µ–π–º–µ (80-100)')
  console.log('‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞–ø–Ω—É—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Ä–æ–≤–Ω–µ–π —Å—Ä–∞–∑—É')
  console.log('‚Ä¢ –ß–µ—Ç–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ 100 —É—Ä–æ–≤–Ω–µ')
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  (window as any).testLevelSystemV2 = testLevelSystemV2
}
