// –¢–µ—Å—Ç —É—Ä–æ–Ω–∞
console.log('üß™ –¢–µ—Å—Ç —É—Ä–æ–Ω–∞...')

let damage = 50
let mobHealth = 100
let mobDefense = 5

console.log('üìä –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:')
console.log('–£—Ä–æ–Ω —Å–∫–∏–ª–ª–∞:', damage)
console.log('HP –º–æ–±–∞:', mobHealth)
console.log('–ó–∞—â–∏—Ç–∞ –º–æ–±–∞:', mobDefense)

for (let turn = 1; turn <= 5; turn++) {
  const finalDamage = Math.max(1, damage - mobDefense)
  const newHealth = Math.max(0, mobHealth - finalDamage)
  
  console.log(`\nüéØ –•–æ–¥ ${turn}:`)
  console.log(`–£—Ä–æ–Ω: ${damage} - ${mobDefense} = ${finalDamage}`)
  console.log(`HP: ${mobHealth} - ${finalDamage} = ${newHealth}`)
  
  if (newHealth <= 0) {
    console.log('üíÄ –ú–æ–± —É–±–∏—Ç!')
    break
  }
  
  mobHealth = newHealth
}

// –¢–µ—Å—Ç —Å –±–æ–ª—å—à–∏–º —É—Ä–æ–Ω–æ–º
console.log('\n\nüß™ –¢–µ—Å—Ç —Å –±–æ–ª—å—à–∏–º —É—Ä–æ–Ω–æ–º (100):')
damage = 100
mobHealth = 100
mobDefense = 5

for (let turn = 1; turn <= 3; turn++) {
  const finalDamage = Math.max(1, damage - mobDefense)
  const newHealth = Math.max(0, mobHealth - finalDamage)
  
  console.log(`\nüéØ –•–æ–¥ ${turn}:`)
  console.log(`–£—Ä–æ–Ω: ${damage} - ${mobDefense} = ${finalDamage}`)
  console.log(`HP: ${mobHealth} - ${finalDamage} = ${newHealth}`)
  
  if (newHealth <= 0) {
    console.log('üíÄ –ú–æ–± —É–±–∏—Ç!')
    break
  }
  
  mobHealth = newHealth
}
