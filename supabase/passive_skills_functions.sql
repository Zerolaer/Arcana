-- ================================================
-- –§–£–ù–ö–¶–ò–ò –î–õ–Ø –°–ò–°–¢–ï–ú–´ –ü–ê–°–°–ò–í–ù–´–• –ù–ê–í–´–ö–û–í
-- ================================================

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ –∫–ª–∞—Å—Å—É –∏ —É—Ä–æ–≤–Ω—é
CREATE OR REPLACE FUNCTION get_character_passive_skills(p_character_id UUID)
RETURNS JSON AS $$
DECLARE
    v_character RECORD;
    v_class_name TEXT;
    v_result JSON;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
    SELECT c.level, cc.name as class_name
    INTO v_character
    FROM characters c
    JOIN character_classes cc ON c.class_id = cc.id
    WHERE c.id = p_character_id;
    
    IF NOT FOUND THEN
        RETURN '[]'::JSON;
    END IF;
    
    v_class_name := v_character.class_name;
    
    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–∞—Å—Å–∏–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–ª–∞—Å—Å–∞
    CASE v_class_name
        WHEN '–õ—É—á–Ω–∏–∫' THEN
            SELECT json_agg(
                json_build_object(
                    'id', skill_id,
                    'name', skill_name,
                    'description', skill_description,
                    'level_requirement', level_req,
                    'icon', skill_icon,
                    'stat_bonuses', stat_bonuses,
                    'is_learned', level_req <= v_character.level,
                    'class_requirements', ARRAY['–õ—É—á–Ω–∏–∫']
                )
            ) INTO v_result
            FROM (
                VALUES 
                ('archer_precision', '–¢–æ—á–Ω–æ—Å—Ç—å –°—Ç—Ä–µ–ª–∫–∞', '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –¥–∞–ª—å–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏', 1, 'üéØ', '{"precision": 8, "agility": 5}'),
                ('wind_dance', '–¢–∞–Ω–µ—Ü –í–µ—Ç—Ä–∞', '–ü–æ–≤—ã—à–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –∞—Ç–∞–∫–∏ –∏ —É–∫–ª–æ–Ω–µ–Ω–∏–µ', 5, 'üí®', '{"agility": 10, "evasion": 8}'),
                ('hunter_instincts', '–ò–Ω—Å—Ç–∏–Ω–∫—Ç—ã –û—Ö–æ—Ç–Ω–∏–∫–∞', '–£–ª—É—á—à–∞–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω –∏ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å', 10, 'ü¶Ö', '{"precision": 12, "stealth": 6}'),
                ('eagle_eye', '–û—Ä–ª–∏–Ω—ã–π –ì–ª–∞–∑', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –¥–∞–ª—å–Ω–æ—Å—Ç—å', 15, 'üëÅÔ∏è', '{"precision": 15, "agility": 8}'),
                ('storm_archer', '–°—Ç—Ä–µ–ª–æ–∫ –ë—É—Ä–∏', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å', 20, '‚ö°', '{"precision": 20, "agility": 15, "evasion": 10}')
            ) AS skills(skill_id, skill_name, skill_description, level_req, skill_icon, stat_bonuses);
            
        WHEN '–ú–∞–≥' THEN
            SELECT json_agg(
                json_build_object(
                    'id', skill_id,
                    'name', skill_name,
                    'description', skill_description,
                    'level_requirement', level_req,
                    'icon', skill_icon,
                    'stat_bonuses', stat_bonuses,
                    'is_learned', level_req <= v_character.level,
                    'class_requirements', ARRAY['–ú–∞–≥']
                )
            ) INTO v_result
            FROM (
                VALUES 
                ('arcane_knowledge', '–ê—Ä–∫–∞–Ω–Ω—ã–µ –ó–Ω–∞–Ω–∏—è', '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –º–∞–≥–∏—á–µ—Å–∫—É—é —Å–∏–ª—É –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç', 1, 'üìö', '{"intelligence": 10, "spell_power": 8}'),
                ('mana_mastery', '–í–ª–∞–¥–µ–Ω–∏–µ –ú–∞–Ω–æ–π', '–£–ª—É—á—à–∞–µ—Ç —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–∞–Ω—ã –∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ', 5, 'üíô', '{"intelligence": 12, "resistance": 10}'),
                ('elemental_affinity', '–°—Ç–∏—Ö–∏–π–Ω–æ–µ –°—Ä–æ–¥—Å—Ç–≤–æ', '–£—Å–∏–ª–∏–≤–∞–µ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω –∏ —Ç–æ—á–Ω–æ—Å—Ç—å', 10, 'üî•', '{"spell_power": 15, "precision": 8}'),
                ('arcane_shield', '–ê—Ä–∫–∞–Ω–Ω—ã–π –©–∏—Ç', '–°–æ–∑–¥–∞–µ—Ç –º–∞–≥–∏—á–µ—Å–∫—É—é –∑–∞—â–∏—Ç—É', 15, 'üõ°Ô∏è', '{"resistance": 15, "intelligence": 10}'),
                ('archmage_power', '–°–∏–ª–∞ –ê—Ä—Ö–∏–º–∞–≥–∞', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –º–∞–≥–∏—á–µ—Å–∫–∞—è –º–æ—â—å', 20, 'üëë', '{"intelligence": 20, "spell_power": 18, "resistance": 12}')
            ) AS skills(skill_id, skill_name, skill_description, level_req, skill_icon, stat_bonuses);
            
        WHEN '–ë–µ—Ä—Å–µ—Ä–∫' THEN
            SELECT json_agg(
                json_build_object(
                    'id', skill_id,
                    'name', skill_name,
                    'description', skill_description,
                    'level_requirement', level_req,
                    'icon', skill_icon,
                    'stat_bonuses', stat_bonuses,
                    'is_learned', level_req <= v_character.level,
                    'class_requirements', ARRAY['–ë–µ—Ä—Å–µ—Ä–∫']
                )
            ) INTO v_result
            FROM (
                VALUES 
                ('berserker_rage', '–Ø—Ä–æ—Å—Ç—å –ë–µ—Ä—Å–µ—Ä–∫–∞', '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É –∏ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å', 1, 'üò°', '{"strength": 12, "endurance": 8}'),
                ('iron_skin', '–ñ–µ–ª–µ–∑–Ω–∞—è –ö–æ–∂–∞', '–ü–æ–≤—ã—à–∞–µ—Ç –±—Ä–æ–Ω—é –∏ –∑–¥–æ—Ä–æ–≤—å–µ', 5, 'üõ°Ô∏è', '{"armor": 12, "endurance": 10}'),
                ('bloodthirst', '–ö—Ä–æ–≤–æ–∂–∞–¥–Ω–æ—Å—Ç—å', '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É—Ä–æ–Ω –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –∞—Ç–∞–∫–∏', 10, 'ü©∏', '{"strength": 15, "agility": 8}'),
                ('unstoppable_force', '–ù–µ—É–¥–µ—Ä–∂–∏–º–∞—è –°–∏–ª–∞', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –º–æ—â—å', 15, 'üí•', '{"strength": 18, "endurance": 12}'),
                ('legendary_berserker', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –ë–µ—Ä—Å–µ—Ä–∫', '–ê–±—Å–æ–ª—é—Ç–Ω–∞—è —è—Ä–æ—Å—Ç—å –∏ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ', 20, '‚öîÔ∏è', '{"strength": 25, "endurance": 18, "armor": 15}')
            ) AS skills(skill_id, skill_name, skill_description, level_req, skill_icon, stat_bonuses);
            
        WHEN '–ê—Å—Å–∞—Å–∏–Ω' THEN
            SELECT json_agg(
                json_build_object(
                    'id', skill_id,
                    'name', skill_name,
                    'description', skill_description,
                    'level_requirement', level_req,
                    'icon', skill_icon,
                    'stat_bonuses', stat_bonuses,
                    'is_learned', level_req <= v_character.level,
                    'class_requirements', ARRAY['–ê—Å—Å–∞—Å–∏–Ω']
                )
            ) INTO v_result
            FROM (
                VALUES 
                ('shadow_step', '–¢–µ–Ω–µ–≤–æ–π –®–∞–≥', '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å –∏ –ª–æ–≤–∫–æ—Å—Ç—å', 1, 'üåë', '{"stealth": 12, "agility": 8}'),
                ('deadly_precision', '–°–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω–∞—è –¢–æ—á–Ω–æ—Å—Ç—å', '–£–ª—É—á—à–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω', 5, 'üéØ', '{"precision": 10, "stealth": 8}'),
                ('shadow_mastery', '–í–ª–∞–¥–µ–Ω–∏–µ –¢–µ–Ω—è–º–∏', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å –∏ —É–∫–ª–æ–Ω–µ–Ω–∏–µ', 10, 'üë§', '{"stealth": 15, "evasion": 10}'),
                ('assassin_blade', '–ö–ª–∏–Ω–æ–∫ –ê—Å—Å–∞—Å–∏–Ω–∞', '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É—Ä–æ–Ω –∏–∑ –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏', 15, 'üó°Ô∏è', '{"stealth": 18, "precision": 12}'),
                ('shadow_lord', '–ü–æ–≤–µ–ª–∏—Ç–µ–ª—å –¢–µ–Ω–µ–π', '–ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç—å—é', 20, 'üëë', '{"stealth": 25, "agility": 15, "precision": 15}')
            ) AS skills(skill_id, skill_name, skill_description, level_req, skill_icon, stat_bonuses);
            
        ELSE
            v_result := '[]'::JSON;
    END CASE;
    
    RETURN COALESCE(v_result, '[]'::JSON);
END;
$$ LANGUAGE plpgsql;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –±–æ–Ω—É—Å–æ–≤ –æ—Ç –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
CREATE OR REPLACE FUNCTION calculate_passive_skill_bonuses(p_character_id UUID)
RETURNS JSON AS $$
DECLARE
    v_character RECORD;
    v_class_name TEXT;
    v_bonuses JSON;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
    SELECT c.level, cc.name as class_name
    INTO v_character
    FROM characters c
    JOIN character_classes cc ON c.class_id = cc.id
    WHERE c.id = p_character_id;
    
    IF NOT FOUND THEN
        RETURN '{}'::JSON;
    END IF;
    
    v_class_name := v_character.class_name;
    
    -- –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–ª–∞—Å—Å–∞ –∏ —É—Ä–æ–≤–Ω—è
    CASE v_class_name
        WHEN '–õ—É—á–Ω–∏–∫' THEN
            SELECT json_build_object(
                'agility', CASE WHEN v_character.level >= 1 THEN 5 ELSE 0 END + 
                          CASE WHEN v_character.level >= 5 THEN 10 ELSE 0 END + 
                          CASE WHEN v_character.level >= 15 THEN 8 ELSE 0 END + 
                          CASE WHEN v_character.level >= 20 THEN 15 ELSE 0 END,
                'precision', CASE WHEN v_character.level >= 1 THEN 8 ELSE 0 END + 
                            CASE WHEN v_character.level >= 10 THEN 12 ELSE 0 END + 
                            CASE WHEN v_character.level >= 15 THEN 15 ELSE 0 END + 
                            CASE WHEN v_character.level >= 20 THEN 20 ELSE 0 END,
                'evasion', CASE WHEN v_character.level >= 5 THEN 8 ELSE 0 END + 
                          CASE WHEN v_character.level >= 20 THEN 10 ELSE 0 END,
                'stealth', CASE WHEN v_character.level >= 10 THEN 6 ELSE 0 END
            ) INTO v_bonuses;
            
        WHEN '–ú–∞–≥' THEN
            SELECT json_build_object(
                'intelligence', CASE WHEN v_character.level >= 1 THEN 10 ELSE 0 END + 
                               CASE WHEN v_character.level >= 5 THEN 12 ELSE 0 END + 
                               CASE WHEN v_character.level >= 15 THEN 10 ELSE 0 END + 
                               CASE WHEN v_character.level >= 20 THEN 20 ELSE 0 END,
                'spell_power', CASE WHEN v_character.level >= 1 THEN 8 ELSE 0 END + 
                              CASE WHEN v_character.level >= 10 THEN 15 ELSE 0 END + 
                              CASE WHEN v_character.level >= 20 THEN 18 ELSE 0 END,
                'resistance', CASE WHEN v_character.level >= 5 THEN 10 ELSE 0 END + 
                             CASE WHEN v_character.level >= 15 THEN 15 ELSE 0 END + 
                             CASE WHEN v_character.level >= 20 THEN 12 ELSE 0 END,
                'precision', CASE WHEN v_character.level >= 10 THEN 8 ELSE 0 END
            ) INTO v_bonuses;
            
        WHEN '–ë–µ—Ä—Å–µ—Ä–∫' THEN
            SELECT json_build_object(
                'strength', CASE WHEN v_character.level >= 1 THEN 12 ELSE 0 END + 
                           CASE WHEN v_character.level >= 10 THEN 15 ELSE 0 END + 
                           CASE WHEN v_character.level >= 15 THEN 18 ELSE 0 END + 
                           CASE WHEN v_character.level >= 20 THEN 25 ELSE 0 END,
                'endurance', CASE WHEN v_character.level >= 1 THEN 8 ELSE 0 END + 
                            CASE WHEN v_character.level >= 5 THEN 10 ELSE 0 END + 
                            CASE WHEN v_character.level >= 15 THEN 12 ELSE 0 END + 
                            CASE WHEN v_character.level >= 20 THEN 18 ELSE 0 END,
                'armor', CASE WHEN v_character.level >= 5 THEN 12 ELSE 0 END + 
                        CASE WHEN v_character.level >= 20 THEN 15 ELSE 0 END,
                'agility', CASE WHEN v_character.level >= 10 THEN 8 ELSE 0 END
            ) INTO v_bonuses;
            
        WHEN '–ê—Å—Å–∞—Å–∏–Ω' THEN
            SELECT json_build_object(
                'stealth', CASE WHEN v_character.level >= 1 THEN 12 ELSE 0 END + 
                          CASE WHEN v_character.level >= 5 THEN 8 ELSE 0 END + 
                          CASE WHEN v_character.level >= 10 THEN 15 ELSE 0 END + 
                          CASE WHEN v_character.level >= 15 THEN 18 ELSE 0 END + 
                          CASE WHEN v_character.level >= 20 THEN 25 ELSE 0 END,
                'agility', CASE WHEN v_character.level >= 1 THEN 8 ELSE 0 END + 
                          CASE WHEN v_character.level >= 20 THEN 15 ELSE 0 END,
                'precision', CASE WHEN v_character.level >= 5 THEN 10 ELSE 0 END + 
                            CASE WHEN v_character.level >= 15 THEN 12 ELSE 0 END + 
                            CASE WHEN v_character.level >= 20 THEN 15 ELSE 0 END,
                'evasion', CASE WHEN v_character.level >= 10 THEN 10 ELSE 0 END
            ) INTO v_bonuses;
            
        ELSE
            v_bonuses := '{}'::JSON;
    END CASE;
    
    RETURN COALESCE(v_bonuses, '{}'::JSON);
END;
$$ LANGUAGE plpgsql;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å —É—á–µ—Ç–æ–º –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
CREATE OR REPLACE FUNCTION update_character_with_passive_skills(p_character_id UUID)
RETURNS BOOLEAN AS $$
DECLARE
    v_character RECORD;
    v_passive_bonuses JSON;
    v_updated_stats JSON;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –±–æ–Ω—É—Å—ã –æ—Ç –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
    SELECT calculate_passive_skill_bonuses(p_character_id) INTO v_passive_bonuses;
    
    -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    SELECT * INTO v_character
    FROM characters
    WHERE id = p_character_id;
    
    IF NOT FOUND THEN
        RETURN FALSE;
    END IF;
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å —É—á–µ—Ç–æ–º –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
    UPDATE characters SET
        -- –ë–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å –±–æ–Ω—É—Å–∞–º–∏ –æ—Ç –ø–∞—Å—Å–∏–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
        agility = agility + COALESCE((v_passive_bonuses->>'agility')::INTEGER, 0),
        precision = precision + COALESCE((v_passive_bonuses->>'precision')::INTEGER, 0),
        evasion = evasion + COALESCE((v_passive_bonuses->>'evasion')::INTEGER, 0),
        intelligence = intelligence + COALESCE((v_passive_bonuses->>'intelligence')::INTEGER, 0),
        spell_power = spell_power + COALESCE((v_passive_bonuses->>'spell_power')::INTEGER, 0),
        resistance = resistance + COALESCE((v_passive_bonuses->>'resistance')::INTEGER, 0),
        strength = strength + COALESCE((v_passive_bonuses->>'strength')::INTEGER, 0),
        endurance = endurance + COALESCE((v_passive_bonuses->>'endurance')::INTEGER, 0),
        armor = armor + COALESCE((v_passive_bonuses->>'armor')::INTEGER, 0),
        stealth = stealth + COALESCE((v_passive_bonuses->>'stealth')::INTEGER, 0)
    WHERE id = p_character_id;
    
    RETURN TRUE;
END;
$$ LANGUAGE plpgsql;
