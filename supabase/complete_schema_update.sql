-- Complete Schema Update
-- This file contains all necessary tables and fixes

-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- 1. MOBS TABLE (Missing from main schema)
CREATE TABLE IF NOT EXISTS mobs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL,
    description TEXT,
    level INTEGER NOT NULL DEFAULT 1,
    health INTEGER NOT NULL DEFAULT 100,
    attack_damage INTEGER NOT NULL DEFAULT 10,
    defense INTEGER NOT NULL DEFAULT 5,
    magic_resistance INTEGER NOT NULL DEFAULT 0,
    aggressive BOOLEAN DEFAULT true,
    respawn_time INTEGER DEFAULT 60, -- in seconds
    experience_reward INTEGER NOT NULL DEFAULT 50,
    gold_reward INTEGER NOT NULL DEFAULT 25,
    loot_table_id UUID,
    image VARCHAR(10) DEFAULT 'üëπ',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- 2. MOB SPAWNS TABLE (Missing from main schema)
CREATE TABLE IF NOT EXISTS mob_spawns (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    spot_id UUID REFERENCES farming_spots(id) ON DELETE CASCADE,
    mob_id UUID REFERENCES mobs(id) ON DELETE CASCADE,
    spawn_rate DECIMAL(5,2) DEFAULT 1.0, -- mobs per minute
    max_concurrent INTEGER DEFAULT 1,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now(),
    UNIQUE(spot_id, mob_id)
);

-- 3. LOOT TABLES (Missing from main schema)
CREATE TABLE IF NOT EXISTS loot_tables (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- 4. LOOT TABLE ITEMS (Missing from main schema)
CREATE TABLE IF NOT EXISTS loot_table_items (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    loot_table_id UUID REFERENCES loot_tables(id) ON DELETE CASCADE,
    item_id UUID REFERENCES items(id) ON DELETE CASCADE,
    drop_rate DECIMAL(5,2) NOT NULL DEFAULT 1.0, -- percentage (0-100)
    min_quantity INTEGER DEFAULT 1,
    max_quantity INTEGER DEFAULT 1,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT now()
);

-- 5. FIX FARMING SPOTS TABLE (Add missing columns)
ALTER TABLE farming_spots 
ADD COLUMN IF NOT EXISTS current_occupancy INTEGER DEFAULT 0,
ADD COLUMN IF NOT EXISTS max_occupancy INTEGER DEFAULT 1,
ADD COLUMN IF NOT EXISTS difficulty_multiplier DECIMAL(3,1) DEFAULT 1.0,
ADD COLUMN IF NOT EXISTS experience_multiplier DECIMAL(3,1) DEFAULT 1.0,
ADD COLUMN IF NOT EXISTS position JSONB DEFAULT '{"x": 0, "y": 0}';

-- 6. CREATE INDEXES FOR NEW TABLES
CREATE INDEX IF NOT EXISTS idx_mobs_level ON mobs(level);
CREATE INDEX IF NOT EXISTS idx_mobs_active ON mobs(is_active);
CREATE INDEX IF NOT EXISTS idx_mob_spawns_spot_id ON mob_spawns(spot_id);
CREATE INDEX IF NOT EXISTS idx_mob_spawns_mob_id ON mob_spawns(mob_id);
CREATE INDEX IF NOT EXISTS idx_loot_table_items_loot_table_id ON loot_table_items(loot_table_id);
CREATE INDEX IF NOT EXISTS idx_loot_table_items_item_id ON loot_table_items(item_id);

-- 7. INSERT BASIC MOBS DATA
INSERT INTO mobs (name, description, level, health, attack_damage, defense, magic_resistance, aggressive, respawn_time, experience_reward, gold_reward, image) VALUES
-- Level 1-5 mobs
('–õ–µ—Å–Ω–æ–π —Å–ª–∞–π–º', '–ú—è–≥–∫–∏–π –∏ –º–µ–¥–ª–µ–Ω–Ω—ã–π —Å–ª–∞–π–º –∏–∑ –ª–µ—Å–∞.', 1, 50, 8, 2, 0, false, 30, 15, 10, 'üü¢'),
('–î–∏–∫–∏–π –∫—Ä–æ–ª–∏–∫', '–ë—ã—Å—Ç—Ä—ã–π –∏ –ø—É–≥–ª–∏–≤—ã–π –∫—Ä–æ–ª–∏–∫.', 2, 35, 12, 1, 0, false, 45, 20, 15, 'üê∞'),
('–õ–µ—Å–Ω–æ–π –≤–æ–ª–∫', '–û–ø–∞—Å–Ω—ã–π —Ö–∏—â–Ω–∏–∫ –ª–µ—Å–∞.', 3, 80, 18, 5, 0, true, 60, 35, 25, 'üê∫'),
('–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ø–∞—É–∫', '–ë–æ–ª—å—à–æ–π —è–¥–æ–≤–∏—Ç—ã–π –ø–∞—É–∫.', 4, 65, 22, 3, 0, true, 90, 45, 30, 'üï∑Ô∏è'),
('–õ–µ—Å–Ω–æ–π —Å—Ç—Ä–∞–∂', '–î—Ä–µ–≤–Ω–∏–π –∑–∞—â–∏—Ç–Ω–∏–∫ –ª–µ—Å–∞.', 5, 120, 25, 8, 5, true, 120, 60, 40, 'üå≥'),

-- Level 6-15 mobs
('–ü–µ—â–µ—Ä–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å', '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å –∏–∑ –ø–µ—â–µ—Ä—ã.', 6, 45, 20, 2, 0, true, 40, 25, 20, 'ü¶á'),
('–õ–µ—Å–Ω–æ–π –æ—Ä–∫', '–ü—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–π –≤–æ–∏–Ω-–æ—Ä–∫.', 8, 100, 30, 6, 0, true, 80, 50, 35, 'üëπ'),
('–ö–∞–º–µ–Ω–Ω—ã–π –≥–æ–ª–µ–º', '–ú–∞—Å—Å–∏–≤–Ω—ã–π –≥–æ–ª–µ–º –∏–∑ –∫–∞–º–Ω—è.', 12, 200, 40, 15, 10, false, 180, 100, 75, 'üóø'),
('–¢–µ–Ω–µ–≤–æ–π —É–±–∏–π—Ü–∞', '–ë—ã—Å—Ç—Ä—ã–π –∏ —Å–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π —É–±–∏–π—Ü–∞ –∏–∑ —Ç–µ–Ω–µ–π.', 18, 150, 50, 8, 5, true, 120, 80, 60, 'ü•∑'),

-- Level 15-30 mobs
('–°–∫–µ–ª–µ—Ç-–≤–æ–∏–Ω', '–í–æ—Å—Å—Ç–∞–≤—à–∏–π –∏–∑ –º–µ—Ä—Ç–≤—ã—Ö –¥—Ä–µ–≤–Ω–∏–π –≤–æ–∏–Ω.', 20, 180, 45, 12, 0, true, 150, 90, 70, 'üíÄ'),
('–ù–µ–∫—Ä–æ–º–∞–Ω—Ç', '–¢–µ–º–Ω—ã–π –º–∞–≥, –≤–æ—Å–∫—Ä–µ—à–∞—é—â–∏–π –º–µ—Ä—Ç–≤—ã—Ö.', 25, 160, 55, 8, 20, false, 200, 120, 90, 'üßô‚Äç‚ôÇÔ∏è'),
('–î—Ä–µ–≤–Ω–∏–π –ª–∏—á', '–ú–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∞–≥-–Ω–µ–∂–∏—Ç—å —Å —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–æ–π –º–∞–≥–∏–µ–π.', 30, 300, 70, 15, 30, true, 300, 180, 150, 'üëë'),

-- Level 25-45 mobs
('–û–≥–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å', '–°—É—â–µ—Å—Ç–≤–æ –∏–∑ —á–∏—Å—Ç–æ–≥–æ –æ–≥–Ω—è, –Ω–∞–Ω–æ—Å—è—â–µ–µ –º–∞–≥–∏—á–µ—Å–∫–∏–π —É—Ä–æ–Ω.', 35, 250, 60, 10, 25, true, 180, 150, 120, 'üî•'),
('–õ–∞–≤–æ–≤—ã–π –≥–æ–ª–µ–º', '–ú–∞—Å—Å–∏–≤–Ω—ã–π –≥–æ–ª–µ–º –∏–∑ —Ä–∞—Å–ø–ª–∞–≤–ª–µ–Ω–Ω–æ–π –ª–∞–≤—ã.', 40, 400, 80, 25, 15, false, 240, 200, 180, 'üåã'),
('–û–≥–Ω–µ–Ω–Ω—ã–π –¥—Ä–∞–∫–æ–Ω', '–ú–æ–ª–æ–¥–æ–π –¥—Ä–∞–∫–æ–Ω —Å –æ–≥–Ω–µ–Ω–Ω—ã–º –¥—ã—Ö–∞–Ω–∏–µ–º.', 45, 500, 100, 20, 20, true, 360, 300, 250, 'üêâ')
ON CONFLICT (name) DO NOTHING;

-- 8. CREATE LOOT TABLES
INSERT INTO loot_tables (name) VALUES
('–°–ª–∞–π–º –ª—É—Ç'),
('–í–æ–ª–∫ –ª—É—Ç'),
('–ü–∞—É–∫ –ª—É—Ç'),
('–û—Ä–∫ –ª—É—Ç'),
('–õ–µ—Ç—É—á–∞—è –º—ã—à—å –ª—É—Ç'),
('–ì–æ–ª–µ–º –ª—É—Ç'),
('–£–±–∏–π—Ü–∞ –ª—É—Ç'),
('–°–∫–µ–ª–µ—Ç –ª—É—Ç'),
('–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –ª—É—Ç'),
('–õ–∏—á –ª—É—Ç'),
('–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—É—Ç'),
('–î—Ä–∞–∫–æ–Ω –ª—É—Ç')
ON CONFLICT (name) DO NOTHING;

-- 9. UPDATE MOBS WITH LOOT TABLE REFERENCES
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–°–ª–∞–π–º –ª—É—Ç') WHERE name = '–õ–µ—Å–Ω–æ–π —Å–ª–∞–π–º';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–í–æ–ª–∫ –ª—É—Ç') WHERE name = '–õ–µ—Å–Ω–æ–π –≤–æ–ª–∫';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–ü–∞—É–∫ –ª—É—Ç') WHERE name = '–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ø–∞—É–∫';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–û—Ä–∫ –ª—É—Ç') WHERE name = '–õ–µ—Å–Ω–æ–π –æ—Ä–∫';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–õ–µ—Ç—É—á–∞—è –º—ã—à—å –ª—É—Ç') WHERE name = '–ü–µ—â–µ—Ä–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–ì–æ–ª–µ–º –ª—É—Ç') WHERE name = '–ö–∞–º–µ–Ω–Ω—ã–π –≥–æ–ª–µ–º';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–£–±–∏–π—Ü–∞ –ª—É—Ç') WHERE name = '–¢–µ–Ω–µ–≤–æ–π —É–±–∏–π—Ü–∞';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–°–∫–µ–ª–µ—Ç –ª—É—Ç') WHERE name = '–°–∫–µ–ª–µ—Ç-–≤–æ–∏–Ω';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–ù–µ–∫—Ä–æ–º–∞–Ω—Ç –ª—É—Ç') WHERE name = '–ù–µ–∫—Ä–æ–º–∞–Ω—Ç';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–õ–∏—á –ª—É—Ç') WHERE name = '–î—Ä–µ–≤–Ω–∏–π –ª–∏—á';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å –ª—É—Ç') WHERE name = '–û–≥–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç–∞–ª—å';
UPDATE mobs SET loot_table_id = (SELECT id FROM loot_tables WHERE name = '–î—Ä–∞–∫–æ–Ω –ª—É—Ç') WHERE name = '–û–≥–Ω–µ–Ω–Ω—ã–π –¥—Ä–∞–∫–æ–Ω';

-- 10. ASSIGN MOBS TO FARMING SPOTS
INSERT INTO mob_spawns (spot_id, mob_id, spawn_rate, max_concurrent) VALUES
-- –ù–æ–≤–∏—á–∫–æ–≤—ã–π –ª–µ—Å - –ü–æ–ª—è–Ω–∞ —Å–ª–∞–π–º–æ–≤
((SELECT id FROM farming_spots WHERE name = '–ü–æ–ª—è–Ω–∞ —Å–ª–∞–π–º–æ–≤'), (SELECT id FROM mobs WHERE name = '–õ–µ—Å–Ω–æ–π —Å–ª–∞–π–º'), 2.0, 3),
((SELECT id FROM farming_spots WHERE name = '–ü–æ–ª—è–Ω–∞ —Å–ª–∞–π–º–æ–≤'), (SELECT id FROM mobs WHERE name = '–î–∏–∫–∏–π –∫—Ä–æ–ª–∏–∫'), 1.5, 2),

-- –ù–æ–≤–∏—á–∫–æ–≤—ã–π –ª–µ—Å - –í–æ–ª—á—å–µ –ª–æ–≥–æ–≤–æ  
((SELECT id FROM farming_spots WHERE name = '–í–æ–ª—á—å–µ –ª–æ–≥–æ–≤–æ'), (SELECT id FROM mobs WHERE name = '–õ–µ—Å–Ω–æ–π –≤–æ–ª–∫'), 1.5, 2),
((SELECT id FROM farming_spots WHERE name = '–í–æ–ª—á—å–µ –ª–æ–≥–æ–≤–æ'), (SELECT id FROM mobs WHERE name = '–õ–µ—Å–Ω–æ–π —Å–ª–∞–π–º'), 1.0, 1),
((SELECT id FROM farming_spots WHERE name = '–í–æ–ª—á—å–µ –ª–æ–≥–æ–≤–æ'), (SELECT id FROM mobs WHERE name = '–î–∏–∫–∏–π –∫—Ä–æ–ª–∏–∫'), 0.8, 1),

-- –ù–æ–≤–∏—á–∫–æ–≤—ã–π –ª–µ—Å - –ü–∞—É—á—å–µ –≥–Ω–µ–∑–¥–æ
((SELECT id FROM farming_spots WHERE name = '–ü–∞—É—á—å–µ –≥–Ω–µ–∑–¥–æ'), (SELECT id FROM mobs WHERE name = '–ì–∏–≥–∞–Ω—Ç—Å–∫–∏–π –ø–∞—É–∫'), 1.2, 2),
((SELECT id FROM farming_spots WHERE name = '–ü–∞—É—á—å–µ –≥–Ω–µ–∑–¥–æ'), (SELECT id FROM mobs WHERE name = '–õ–µ—Å–Ω–æ–π —Å—Ç—Ä–∞–∂'), 0.5, 1),

-- –¢–µ–º–Ω–∞—è –ø–µ—â–µ—Ä–∞ - –í—Ö–æ–¥–Ω–∞—è –∫–∞–º–µ—Ä–∞
((SELECT id FROM farming_spots WHERE name = '–í—Ö–æ–¥–Ω–∞—è –∫–∞–º–µ—Ä–∞'), (SELECT id FROM mobs WHERE name = '–ü–µ—â–µ—Ä–Ω–∞—è –ª–µ—Ç—É—á–∞—è –º—ã—à—å'), 2.5, 4),
((SELECT id FROM farming_spots WHERE name = '–í—Ö–æ–¥–Ω–∞—è –∫–∞–º–µ—Ä–∞'), (SELECT id FROM mobs WHERE name = '–õ–µ—Å–Ω–æ–π –æ—Ä–∫'), 0.8, 1),

-- –¢–µ–º–Ω–∞—è –ø–µ—â–µ—Ä–∞ - –ì–ª—É–±–æ–∫–∏–π —Ç—É–Ω–Ω–µ–ª—å
((SELECT id FROM farming_spots WHERE name = '–ì–ª—É–±–æ–∫–∏–π —Ç—É–Ω–Ω–µ–ª—å'), (SELECT id FROM mobs WHERE name = '–ö–∞–º–µ–Ω–Ω—ã–π –≥–æ–ª–µ–º'), 0.8, 1),
((SELECT id FROM farming_spots WHERE name = '–ì–ª—É–±–æ–∫–∏–π —Ç—É–Ω–Ω–µ–ª—å'), (SELECT id FROM mobs WHERE name = '–¢–µ–Ω–µ–≤–æ–π —É–±–∏–π—Ü–∞'), 1.0, 2),

-- –ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–µ —Ä—É–∏–Ω—ã - –î–≤–æ—Ä —Å–∫–µ–ª–µ—Ç–æ–≤
((SELECT id FROM farming_spots WHERE name = '–î–≤–æ—Ä —Å–∫–µ–ª–µ—Ç–æ–≤'), (SELECT id FROM mobs WHERE name = '–°–∫–µ–ª–µ—Ç-–≤–æ–∏–Ω'), 1.8, 3),

-- –ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–µ —Ä—É–∏–Ω—ã - –ë–∞—à–Ω—è –º–∞–≥–∞
((SELECT id FROM farming_spots WHERE name = '–ë–∞—à–Ω—è –º–∞–≥–∞'), (SELECT id FROM mobs WHERE name = '–ù–µ–∫—Ä–æ–º–∞–Ω—Ç'), 0.6, 1),
((SELECT id FROM farming_spots WHERE name = '–ë–∞—à–Ω—è –º–∞–≥–∞'), (SELECT id FROM mobs WHERE name = '–î—Ä–µ–≤–Ω–∏–π –ª–∏—á'), 0.3, 1)
ON CONFLICT (spot_id, mob_id) DO NOTHING;

-- 11. ADD MISSING COLUMNS TO FARMING_SPOTS IF THEY DON'T EXIST
DO $$ 
BEGIN
    -- Add current_occupancy column if it doesn't exist
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'farming_spots' AND column_name = 'current_occupancy') THEN
        ALTER TABLE farming_spots ADD COLUMN current_occupancy INTEGER DEFAULT 0;
    END IF;
    
    -- Add max_occupancy column if it doesn't exist
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'farming_spots' AND column_name = 'max_occupancy') THEN
        ALTER TABLE farming_spots ADD COLUMN max_occupancy INTEGER DEFAULT 1;
    END IF;
    
    -- Add difficulty_multiplier column if it doesn't exist
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'farming_spots' AND column_name = 'difficulty_multiplier') THEN
        ALTER TABLE farming_spots ADD COLUMN difficulty_multiplier DECIMAL(3,1) DEFAULT 1.0;
    END IF;
    
    -- Add experience_multiplier column if it doesn't exist
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'farming_spots' AND column_name = 'experience_multiplier') THEN
        ALTER TABLE farming_spots ADD COLUMN experience_multiplier DECIMAL(3,1) DEFAULT 1.0;
    END IF;
    
    -- Add position column if it doesn't exist
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'farming_spots' AND column_name = 'position') THEN
        ALTER TABLE farming_spots ADD COLUMN position JSONB DEFAULT '{"x": 0, "y": 0}';
    END IF;
END $$;

-- 12. UPDATE FARMING SPOTS WITH PROPER OCCUPANCY DATA
UPDATE farming_spots SET 
    current_occupancy = 0,
    max_occupancy = CASE 
        WHEN name = '–ü–æ–ª—è–Ω–∞ —Å–ª–∞–π–º–æ–≤' THEN 5
        WHEN name = '–í–æ–ª—á—å–µ –ª–æ–≥–æ–≤–æ' THEN 4
        WHEN name = '–ü–∞—É—á—å–µ –≥–Ω–µ–∑–¥–æ' THEN 3
        WHEN name = '–í—Ö–æ–¥–Ω–∞—è –∫–∞–º–µ—Ä–∞' THEN 6
        WHEN name = '–ì–ª—É–±–æ–∫–∏–π —Ç—É–Ω–Ω–µ–ª—å' THEN 3
        WHEN name = '–î–≤–æ—Ä —Å–∫–µ–ª–µ—Ç–æ–≤' THEN 4
        WHEN name = '–ë–∞—à–Ω—è –º–∞–≥–∞' THEN 2
        ELSE 1
    END
WHERE current_occupancy IS NULL OR max_occupancy IS NULL;

-- 13. CREATE FUNCTIONS FOR OCCUPYING/LEAVING SPOTS
CREATE OR REPLACE FUNCTION occupy_farming_spot(spot_id UUID, character_id UUID)
RETURNS JSON AS $$
DECLARE
    spot_record RECORD;
    result JSON;
BEGIN
    -- Get spot information
    SELECT * INTO spot_record FROM farming_spots WHERE id = spot_id;
    
    -- Check if spot exists
    IF NOT FOUND THEN
        RETURN json_build_object('success', false, 'error', 'Spot not found');
    END IF;
    
    -- Check if spot has available space
    IF spot_record.current_occupancy >= spot_record.max_occupancy THEN
        RETURN json_build_object('success', false, 'error', 'Spot is full');
    END IF;
    
    -- Update spot occupancy
    UPDATE farming_spots 
    SET current_occupancy = current_occupancy + 1 
    WHERE id = spot_id;
    
    -- Update character location
    UPDATE characters 
    SET current_spot_id = spot_id, current_location_id = spot_record.location_id
    WHERE id = character_id;
    
    RETURN json_build_object('success', true, 'message', 'Successfully occupied spot');
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION leave_farming_spot(spot_id UUID, character_id UUID)
RETURNS JSON AS $$
DECLARE
    spot_record RECORD;
    result JSON;
BEGIN
    -- Get spot information
    SELECT * INTO spot_record FROM farming_spots WHERE id = spot_id;
    
    -- Check if spot exists
    IF NOT FOUND THEN
        RETURN json_build_object('success', false, 'error', 'Spot not found');
    END IF;
    
    -- Update spot occupancy
    UPDATE farming_spots 
    SET current_occupancy = GREATEST(0, current_occupancy - 1) 
    WHERE id = spot_id;
    
    -- Update character location
    UPDATE characters 
    SET current_spot_id = NULL
    WHERE id = character_id;
    
    RETURN json_build_object('success', true, 'message', 'Successfully left spot');
END;
$$ LANGUAGE plpgsql;

-- 14. GRANT PERMISSIONS
GRANT ALL ON mobs TO authenticated;
GRANT ALL ON mob_spawns TO authenticated;
GRANT ALL ON loot_tables TO authenticated;
GRANT ALL ON loot_table_items TO authenticated;
GRANT EXECUTE ON FUNCTION occupy_farming_spot TO authenticated;
GRANT EXECUTE ON FUNCTION leave_farming_spot TO authenticated;
